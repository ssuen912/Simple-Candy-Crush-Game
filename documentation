

My program is a simplified candy crush game. It contains of 5 javascript documents - script, styles, levels, rules and play.

In the script.js file, it consists of the global variables and some simple helper functions that will be used in other js files. It also contains the functions for the function buttons.

In the styles.js file, I moved all the related functions to build the web UI here. It includes functions for building and customaizing the progress bar, play grid, level transition graphics and the status texts at the top of the webpage and the function buttons at the bottom. 

I have four function buttons. The restart game button calls on the function from level.js to start level 1 directly. For the other 3 buttons, they are written in script.js. The cancel move button cancels the first click of fruit in case the player selected the wrong fruit by accident. The Refresh Button is an option for player to refresh the broad with random fruits in case the player found it difficult to swap fruits and earn points in the current play grid and want to bet for luck. I have decided it to cost two moves. (This is written in the instructions.) I also have another button known as "info" button which will display the instructions to on how to play this game. Once the player clicked this button, it will be "turned to another button" named "resume" to remove the instruction to allow players to continue playing.

In the levels.js file, it contains functions for creating and setting up levels, as well as level transitions (level clear / level failed). The setUpAllLevels function allows me to adjust the target scores, moves allowed and number of fruits quickly in case the game become too easy or too hard.  

In the rules.js, it has functions that applies the game rule to check whether there are match 3 or more in rows / columns. The functions here are being ran everytime when the game starts and the player make moves or refresh broad. If match 3 occurs, the cleanBroad function will be called and it will also update the scores. 

Finally, the play.js contains functions that will be called evenever player starts playing the game in the grid. It will judge whether the move is valid and then call on functions in rules.js to check broad and thus swap the fruits accordingly.


